
document.addEventListener('DOMContentLoaded', function () {
  // L·∫•y t·∫•t c·∫£ c√°c carousel
  const carousels = document.querySelectorAll('.carousel');

  carousels.forEach((carousel) => {
    const slides = carousel.querySelectorAll('.carousel-item');
    let currentIndex = 0; // M·∫∑c ƒë·ªãnh l√† slide ƒë·∫ßu ti√™n

    // L·∫•y n√∫t m≈©i t√™n cho t·ª´ng carousel
    const nextButton = carousel.querySelector('.carousel-control-next');
    const prevButton = carousel.querySelector('.carousel-control-prev');

    // H√†m chuy·ªÉn sang slide ti·∫øp theo
    function showNextSlide() {
      // M·ªù slide hi·ªán t·∫°i
      slides[currentIndex].style.transition = 'opacity 0.5s ease'; // Th√™m hi·ªáu ·ª©ng m·ªù
      slides[currentIndex].style.opacity = 0; // M·ªù slide hi·ªán t·∫°i

      setTimeout(() => {
        // ·∫®n slide hi·ªán t·∫°i v√† chuy·ªÉn ƒë·∫øn slide ti·∫øp theo
        slides[currentIndex].classList.remove('active');
        currentIndex = (currentIndex + 1) % slides.length; // Quay v√≤ng c√°c slide
        slides[currentIndex].classList.add('active');
        
        // Thi·∫øt l·∫≠p l·∫°i opacity cho t·∫•t c·∫£ c√°c slide
        slides.forEach(slide => {
          slide.style.opacity = 0; // ƒê·∫£m b·∫£o t·∫•t c·∫£ slide ƒë·ªÅu m·ªù
        });

        // L√†m s√°ng slide m·ªõi t·ª´ m·ªù v·ªõi th·ªùi gian r√µ d·∫ßn 2s
        slides[currentIndex].style.transition = 'opacity 2s ease'; // Th√™m hi·ªáu ·ª©ng r√µ d·∫ßn cho slide m·ªõi
        setTimeout(() => {
          slides[currentIndex].style.opacity = 1; // L√†m s√°ng slide m·ªõi t·ª´ m·ªù
        }, 50); // ƒê·∫£m b·∫£o hi·ªáu ·ª©ng m·ªù xong tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu r√µ d·∫ßn

        // C·∫≠p nh·∫≠t n√∫t prev v√† next
        prevButton.classList.add('show'); // Hi·ªÉn th·ªã n√∫t prev khi ƒë·∫øn slide cu·ªëi

        // ·∫®n n√∫t next khi ·ªü slide cu·ªëi c√πng
        if (currentIndex === slides.length - 1) {
          nextButton.classList.remove('show'); // ·∫®n n√∫t next
        }
      }, 500); // Sau 500ms m·ªõi chuy·ªÉn sang slide ti·∫øp theo
    }

    // H√†m quay l·∫°i slide tr∆∞·ªõc
    function showPrevSlide() {
      // M·ªù slide hi·ªán t·∫°i
      slides[currentIndex].style.transition = 'opacity 0.5s ease'; // Th√™m hi·ªáu ·ª©ng m·ªù
      slides[currentIndex].style.opacity = 0; // M·ªù slide hi·ªán t·∫°i

      setTimeout(() => {
        // ·∫®n slide hi·ªán t·∫°i v√† quay l·∫°i slide tr∆∞·ªõc
        slides[currentIndex].classList.remove('active');
        currentIndex = (currentIndex - 1 + slides.length) % slides.length; // Quay v√≤ng c√°c slide
        slides[currentIndex].classList.add('active');
        
        // Thi·∫øt l·∫≠p l·∫°i opacity cho t·∫•t c·∫£ c√°c slide
        slides.forEach(slide => {
          slide.style.opacity = 0; // ƒê·∫£m b·∫£o t·∫•t c·∫£ slide ƒë·ªÅu m·ªù
        });

        // L√†m s√°ng slide m·ªõi t·ª´ m·ªù v·ªõi th·ªùi gian r√µ d·∫ßn 2s
        slides[currentIndex].style.transition = 'opacity 2s ease'; // Th√™m hi·ªáu ·ª©ng r√µ d·∫ßn cho slide m·ªõi
        setTimeout(() => {
          slides[currentIndex].style.opacity = 1; // L√†m s√°ng slide m·ªõi t·ª´ m·ªù
        }, 50); // ƒê·∫£m b·∫£o hi·ªáu ·ª©ng m·ªù xong tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu r√µ d·∫ßn

        // C·∫≠p nh·∫≠t n√∫t prev v√† next
        if (currentIndex === 0) {
          prevButton.classList.remove('show'); // ·∫®n n√∫t prev khi ·ªü slide ƒë·∫ßu ti√™n
        }

        // Hi·ªÉn th·ªã l·∫°i n√∫t next khi kh√¥ng c√≤n ·ªü cu·ªëi
        nextButton.classList.add('show'); // Hi·ªÉn th·ªã n√∫t next
      }, 500); // Sau 500ms m·ªõi quay l·∫°i slide tr∆∞·ªõc
    }

    // L·∫Øng nghe s·ª± ki·ªán nh·∫•n n√∫t m≈©i t√™n ti·∫øp theo
    nextButton.addEventListener('click', showNextSlide);

    // L·∫Øng nghe s·ª± ki·ªán nh·∫•n n√∫t m≈©i t√™n quay l·∫°i
    prevButton.addEventListener('click', showPrevSlide);

    // Hi·ªÉn th·ªã slide ƒë·∫ßu ti√™n v√† ch·ªâ hi·ªÉn th·ªã n√∫t next ban ƒë·∫ßu
    slides[currentIndex].classList.add('active');
    slides[currentIndex].style.opacity = 1; // L√†m s√°ng slide ƒë·∫ßu ti√™n
    prevButton.classList.remove('show'); // ·∫®n n√∫t prev khi b·∫Øt ƒë·∫ßu
    nextButton.classList.add('show'); // ƒê·∫£m b·∫£o n√∫t next hi·ªÉn th·ªã khi b·∫Øt ƒë·∫ßu
  });
});



// N√∫t xem th√™m
document.querySelectorAll(".view-more").forEach(button => {
  button.addEventListener("click", function () {
      let popupId = this.getAttribute("data-target");
      let overlay = document.getElementById("overlay" + popupId.slice(-1));
      let popup = document.getElementById(popupId);

      overlay.classList.add("active");

      // Hi·ªÉn th·ªã popup v·ªõi hi·ªáu ·ª©ng xu·∫•t hi·ªán t·ª´ t·ª´
      popup.style.visibility = "visible";
      setTimeout(() => {
          popup.classList.add("active");
      }, 50);

      // üî• Fix l·ªói d·ªãch chuy·ªÉn b·∫±ng c√°ch gi·ªØ l·∫°i padding-right khi m·ªü popup
      let scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;
      document.body.style.paddingRight = scrollBarWidth + "px";

      // Kh√≥a cu·ªôn n·ªÅn nh∆∞ng v·∫´n cho ph√©p cu·ªôn trong popup
      document.body.classList.add("no-scroll");
  });
});

// H√†m ƒë√≥ng popup
function closePopup(popupId) {
  let overlay = document.getElementById("overlay" + popupId.slice(-1));
  let popup = document.getElementById(popupId);

  popup.classList.add("fade-out");

  setTimeout(() => {
      overlay.classList.remove("active");
      popup.classList.remove("active", "fade-out");
      popup.style.visibility = "hidden"; // ·∫®n popup sau khi hi·ªáu ·ª©ng k·∫øt th√∫c

      // üöÄ Kh√¥i ph·ª•c l·∫°i cu·ªôn n·ªÅn v√† x√≥a padding-right
      document.body.classList.remove("no-scroll");
      document.body.style.paddingRight = "";
  }, 300);
}

// ƒê√≥ng popup khi b·∫•m n√∫t ƒë√≥ng
document.querySelectorAll(".close-btn").forEach(button => {
  button.addEventListener("click", function () {
      closePopup(this.getAttribute("data-target"));
  });
});

// ƒê√≥ng popup khi b·∫•m ra ngo√†i overlay
document.querySelectorAll(".overlay").forEach(overlay => {
  overlay.addEventListener("click", function () {
      closePopup(this.id.replace("overlay", "popup"));
  });
});

// ƒê√≥ng popup khi nh·∫•n ph√≠m Esc
document.addEventListener("keydown", function (event) {
  if (event.key === "Escape") {
      document.querySelectorAll(".popup.active").forEach(popup => {
          closePopup(popup.id);
      });
  }
});

// üîí NgƒÉn cu·ªôn n·ªÅn nh∆∞ng v·∫´n cho ph√©p cu·ªôn trong popup
document.addEventListener("wheel", function (event) {
  let popup = document.querySelector(".popup.active");
  if (popup) {
      let isScrollable = popup.scrollHeight > popup.clientHeight;
      let isInsidePopup = popup.contains(event.target);

      // N·∫øu cu·ªôn b√™n trong popup v√† popup c√≥ th·ªÉ cu·ªôn th√¨ kh√¥ng ngƒÉn ch·∫∑n
      if (isInsidePopup && isScrollable) return;

      // N·∫øu kh√¥ng, ngƒÉn cu·ªôn trang
      event.preventDefault();
  }
}, { passive: false });

//TOP 10
// L·∫•y t·∫•t c·∫£ c√°c slide
const slides = document.querySelectorAll('.slide-top10');
const prevBtn = document.querySelector('.prev-btn');
const nextBtn = document.querySelector('.next-btn');

let currentSlide = 0; // B·∫Øt ƒë·∫ßu t·ª´ slide ƒë·∫ßu ti√™n
prevBtn.style.display = 'none'; // ·∫®n n√∫t tr√°i ban ƒë·∫ßu

// H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i hi·ªÉn th·ªã c·ªßa c√°c slide v·ªõi hi·ªáu ·ª©ng m·ªù d·∫ßn
function showSlide(index) {
    if (index === currentSlide) return; // Kh√¥ng l√†m g√¨ n·∫øu kh√¥ng thay ƒë·ªïi slide

    // ·∫®n slide hi·ªán t·∫°i v·ªõi hi·ªáu ·ª©ng m·ªù d·∫ßn
    slides[currentSlide].classList.add('fade-out');
    slides[currentSlide].classList.remove('fade-in');

    setTimeout(() => {
        slides[currentSlide].style.display = 'none'; // ·∫®n ho√†n to√†n slide c≈©
        slides[index].style.display = 'flex'; // Hi·ªÉn th·ªã slide m·ªõi

        // Th√™m hi·ªáu ·ª©ng hi·ªán d·∫ßn
        slides[index].classList.remove('fade-out');
        slides[index].classList.add('fade-in');

        currentSlide = index; // C·∫≠p nh·∫≠t tr·∫°ng th√°i slide hi·ªán t·∫°i
        updateButtonsVisibility(); // C·∫≠p nh·∫≠t hi·ªÉn th·ªã n√∫t
    }, 500); // Ph√π h·ª£p v·ªõi th·ªùi gian hi·ªáu ·ª©ng CSS
}

// H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i c·ªßa c√°c n√∫t "prev" v√† "next"
function updateButtonsVisibility() {
    if (currentSlide > 0) {
        prevBtn.style.display = 'block'; // Ch·ªâ hi·ªÉn th·ªã n√∫t tr√°i khi ƒë√£ b·∫•m ph·∫£i
    } else {
        prevBtn.style.display = 'none';
    }
    
    nextBtn.style.display = currentSlide === slides.length - 1 ? 'none' : 'block';
}

// S·ª± ki·ªán khi nh·∫•n n√∫t "Next"
nextBtn.addEventListener('click', () => {
    if (currentSlide < slides.length - 1) {
        showSlide(currentSlide + 1);
    }
});

// S·ª± ki·ªán khi nh·∫•n n√∫t "Prev"
prevBtn.addEventListener('click', () => {
    if (currentSlide > 0) {
        showSlide(currentSlide - 1);
    }
});

// Hi·ªÉn th·ªã slide ƒë·∫ßu ti√™n khi t·∫£i trang
showSlide(currentSlide);


//T·∫°o B√ìNG B√îNG
function createBubble() {
  let bubble = document.createElement('div');
  bubble.classList.add('bubble');
  
  // V·ªã tr√≠ ng·∫´u nhi√™n cho bong b√≥ng
  bubble.style.left = Math.random() * 100 + '%';  // ƒê·∫∑t v·ªã tr√≠ ngang
  bubble.style.bottom = '0';  // ƒê·∫∑t v·ªã tr√≠ d·ªçc
  
  // Th√™m bong b√≥ng v√†o ti√™u ƒë·ªÅ
  document.querySelector('.title-h1').appendChild(bubble);
  
  // X√≥a bong b√≥ng sau khi ho√†n th√†nh hi·ªáu ·ª©ng
  setTimeout(() => bubble.remove(), 5000);
}

// T·∫°o bong b√≥ng m·ªói 500ms
setInterval(createBubble, 500);

let thumbnails = document.querySelectorAll('.thumbnail');
let banner = document.getElementById("banner");
let movieTitle = document.getElementById("movie-title");
let movieDescription = document.getElementById("movie-description");
let movieYear = document.getElementById("movie-year");
let movieIMDB = document.getElementById("movie-imdb");
let movieAge = document.getElementById("movie-age");
let moviePart = document.getElementById("movie-part");
let movieEpisode = document.getElementById("movie-episode");
let movieGenres = document.querySelector(".sub-tags");

// L·∫•y c√°c n√∫t ƒëi·ªÅu khi·ªÉn
let playBtn = document.getElementById("play-btn");
let favoriteBtn = document.getElementById("favorite-btn");
let infoBtn = document.getElementById("info-btn");


let movies = [
    { 
        image: "trangchu1.webp", title: "B√ìNG MA ANH QU·ªêC", 
        description: "ƒê∆∞·ª£c ƒë·∫∑t trong b·ªëi c·∫£nh n∆∞·ªõc Anh ƒë·∫ßu th·∫ø k·ª∑ 19, Peaky Blinders n√≥i v·ªÅ gia ƒë√¨nh Shelby, nh·ªØng ng∆∞·ªùi c·∫ßm ƒë·∫ßu bƒÉng ƒë·∫£ng Peaky Blinders kh√©t ti·∫øng trong th·∫ø gi·ªõi ng·∫ßm v·ªõi b·ªô n√£o l√† Tommy Shelby, ƒë·ª©a con trai th·ª© hai. B·ªô phim l√† h√†nh tr√¨nh thƒÉng ti·∫øn trong...",
        year: "2013", imdb: "IMDb 8.7", age: "T18", part: "Ph·∫ßn 6", episode: "T·∫≠p 6",
        genres: ["Ch√≠nh K·ªãch", "H√†nh ƒê·ªông", "G√¢y C·∫•n", "H√¨nh S·ª±", "C·ªï ƒêi·ªÉn" , "Phi√™u L∆∞u"],
    },
    { 
        image: "trangchu2.webp", title: "Daredevil: T√°i Xu·∫•t", 
        description: "Matt Murdock, m·ªôt lu·∫≠t s∆∞ m√π v·ªõi kh·∫£ nƒÉng ƒë·∫∑c bi·ªát, chi·∫øn ƒë·∫•u cho c√¥ng l√Ω th√¥ng qua c√¥ng ty lu·∫≠t s·∫ßm u·∫•t c·ªßa m√¨nh. Trong khi c·ª±u tr√πm mafia Wilson Fisk theo ƒëu·ªïi nh·ªØng n·ªó l·ª±c ch√≠nh tr·ªã c·ªßa ri√™ng m√¨nh ·ªü New York. Khi qu√° kh·ª© c·ªßa h·ªç b·∫Øt ƒë·∫ßu l·ªô di·ªán, c·∫£...",
        year: "2025", imdb: "IMDb 8.6", age: "T18", part: "Ph·∫ßn 1", episode: "T·∫≠p 7",
        genres: ["Ch√≠nh K·ªãch", "H√¨nh S·ª±", "Si√™u Anh H√πng", "Marvel"]
    },
    { 
        image: "trangchu3.webp", title: "R√¥-b·ªët ƒê·∫°i Chi·∫øn Cu·ªëi C√πng", 
        description: "Ti·∫øp n·ªëi h√†nh tr√¨nh ph·∫ßn 4 - Cade Yeager, c√πng v·ªõi con g√°i v√† b·∫°n trai c·ªßa c√¥ con g√°i (m·ªôt tay ƒëua ƒë∆∞·ªùng ph·ªë) ƒë·ªìng h√†nh c√πng c√°c Autobots (Autobots Bumblebee, Hound, Drift, v√† Crosshairs) ƒë·ªÉ b·∫£o v·ªá Tr√°i ƒê·∫•t. Trong khi Optimus t·∫°m m·∫•t t√≠ch, ƒë·ªÉ t√¨m k...",
        year: "2017", imdb: "IMDb 5.3", age: "T13",part: "Ph·∫ßn 1", episode: "2h 34m",
        genres: ["H√†nh ƒê·ªông", "Chi·∫øu R·∫°p", "Khoa H·ªçc", "K·ª≥ ·∫¢o", "Vi·ªÖn T∆∞·ªüng", "Phi√™u L∆∞u"]
    },
    { 
        image: "trangchu4.webp", title: "Anh Kh√¥ng ƒêau", 
        description: "M·ªôt ng∆∞·ªùi ƒë√†n √¥ng kh√¥ng th·ªÉ c·∫£m nh·∫≠n n·ªói ƒëau th·ªÉ x√°c ƒë√£ bi·∫øn cƒÉn b·ªánh hi·∫øm g·∫∑p c·ªßa m√¨nh th√†nh l·ª£i th·∫ø b·∫•t ng·ªù trong cu·ªôc chi·∫øn sinh t·ª≠ ƒë·ªÉ gi·∫£i c·ª©u c√¥ g√°i trong m∆°.",
        year: "2025", imdb: "IMDb 6.7", age: "T16", part: "Ph·∫ßn 1", episode: "1h 50m",
        genres: ["H√†nh ƒê·ªông", "Chi·∫øu R·∫°p", "G√¢y C·∫•n", "Kinh D·ªã", "H√†i", "Phi√™u L∆∞u"]
    },
    { 
        image: "trangchu5.webp", title: "Tuy·ªát ƒê·ªânh Kung Fu", 
        description: "Trong x√£ h·ªôi h·ªón lo·∫°n ·ªü Trung Qu·ªëc nh·ªØng nƒÉm 1940, c√°c bƒÉng nh√≥m th·ª±c s·ª± c√≥ ·∫£nh h∆∞·ªüng. Trong phim, ƒë√°ng s·ª£ nh·∫•t ph·∫£i k·ªÉ ƒë·∫øn ƒë·∫£ng L∆∞·ª°i B√∫a m√† k·∫ª ƒë·ª©ng ƒë·∫ßu l√† Sum. BƒÉng nh√≥m c·ªßa Sum ƒëi ƒë·∫øn ƒë√¢u n·ªói kinh ho√†ng theo t·ªõi ƒë√≥. Ng∆∞·ªùi d√¢n th√†nh ph·ªë th√¨ l...",
        year: "2004", imdb: "IMDb 7.7", age: "T16", part: "Ph·∫ßn 1", episode: "1h 39m",
        genres: ["H√†nh ƒê·ªông", "H√¨nh S·ª±", "H√†i", "K·ª≥ ·∫¢o", "Vi·ªÖn T∆∞·ªüng"]
    }
];

let currentIndex = 0;
let autoChangeTimer;
let idleTimer;
let isInteracting = false;  // C·ªù theo d√µi tr·∫°ng th√°i t∆∞∆°ng t√°c

// L∆∞u tr·∫°ng th√°i c·ªßa n√∫t theo t·ª´ng phim
let buttonStates = {};

window.onload = function() {
    changeImage(0); // M·∫∑c ƒë·ªãnh ch·ªçn ·∫£nh ƒë·∫ßu ti√™n
    thumbnails.forEach((thumb, index) => {
        thumb.addEventListener('click', function() {
            clearInterval(autoChangeTimer); // X√≥a b·ªô ƒë·∫øm c≈©
            changeImage(index);
            startAutoChange(); // Restart sau khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c
        });
    });
    startAutoChange(); // B·∫Øt ƒë·∫ßu t·ª± ƒë·ªông chuy·ªÉn ·∫£nh

    // Th√™m s·ª± ki·ªán khi ng∆∞·ªùi d√πng di chuy·ªÉn chu·ªôt ho·∫∑c click trong banner
    banner.addEventListener('mousemove', resetIdleTimer);
    banner.addEventListener('click', resetIdleTimer);

    // S·ª± ki·ªán n√∫t Play
    playBtn.addEventListener("click", function() {
        playBtn.classList.toggle("active");
        saveButtonState(currentIndex);
    });

    // S·ª± ki·ªán n√∫t Tr√°i Tim
    favoriteBtn.addEventListener("click", function() {
        favoriteBtn.classList.toggle("active");
        let icon = favoriteBtn.querySelector("i");
        icon.classList.toggle("fas");
        icon.classList.toggle("far");
        saveButtonState(currentIndex);
    });

    // S·ª± ki·ªán n√∫t Info
    infoBtn.addEventListener("click", function() {
        infoBtn.classList.toggle("active");
        saveButtonState(currentIndex);
    });
};

// H√†m reset b·ªô ƒë·∫øm th·ªùi gian khi ng∆∞·ªùi d√πng di chuy·ªÉn chu·ªôt ho·∫∑c click
function resetIdleTimer() {
    isInteracting = true;  // ƒê·∫∑t c·ªù tr·∫°ng th√°i l√† ƒëang t∆∞∆°ng t√°c
    clearTimeout(idleTimer); // X√≥a b·ªô ƒë·∫øm c≈©
    clearInterval(autoChangeTimer); // D·ª´ng chuy·ªÉn ·∫£nh t·ª± ƒë·ªông khi c√≥ t∆∞∆°ng t√°c
    // ƒê·∫∑t l·∫°i b·ªô ƒë·∫øm th·ªùi gian, sau 3 gi√¢y s·∫Ω t·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi phim
    idleTimer = setTimeout(() => {
        if (!isInteracting) { // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ t∆∞∆°ng t√°c
            currentIndex = (currentIndex + 1) % movies.length; // Chuy·ªÉn sang phim ti·∫øp theo
            changeImage(currentIndex);
            startAutoChange(); // B·∫Øt ƒë·∫ßu l·∫°i chuy·ªÉn ·∫£nh t·ª± ƒë·ªông
        }
    }, 3000); // 3 gi√¢y kh√¥ng di chuy·ªÉn chu·ªôt ho·∫∑c click

    // Reset l·∫°i tr·∫°ng th√°i isInteracting sau 3 gi√¢y
    setTimeout(() => {
        isInteracting = false;
    }, 10000);
}

function changeImage(index) {
    let movie = movies[index];

    // C·∫≠p nh·∫≠t n·ªôi dung phim
    banner.style.backgroundImage = `url('/images/${movie.image}')`;
    movieTitle.innerText = movie.title;
    movieDescription.innerText = movie.description;
    movieYear.innerText = movie.year;
    movieIMDB.innerText = movie.imdb;
    movieAge.innerText = movie.age;
    moviePart.innerText = movie.part;
    movieEpisode.innerText = movie.episode;

    // C·∫≠p nh·∫≠t th·ªÉ lo·∫°i
    movieGenres.innerHTML = "";
    movie.genres.forEach(genre => {
        let genreTag = document.createElement("a");
        genreTag.className = "sub-tag";
        genreTag.innerText = genre;
        movieGenres.appendChild(genreTag);
    });

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i active c·ªßa ·∫£nh nh·ªè
    thumbnails.forEach(img => img.classList.remove("active"));
    thumbnails[index].classList.add("active");

    // üî• Reset tr·∫°ng th√°i c·ªßa c√°c n√∫t
    restoreButtonState(index);

    currentIndex = index;
}

function startAutoChange() {
    clearInterval(autoChangeTimer); // X√≥a timer c≈© tr∆∞·ªõc khi ƒë·∫∑t timer m·ªõi
    autoChangeTimer = setInterval(() => {
        currentIndex = (currentIndex + 1) % movies.length; // Chuy·ªÉn sang phim ti·∫øp theo
        changeImage(currentIndex);
    }, 10000);
}

// ‚úÖ H√†m l∆∞u tr·∫°ng th√°i n√∫t cho t·ª´ng phim
function saveButtonState(index) {
    buttonStates[index] = {
        play: playBtn.classList.contains("active"),
        favorite: favoriteBtn.classList.contains("active"),
        info: infoBtn.classList.contains("active")
    };
}

// ‚úÖ H√†m kh√¥i ph·ª•c tr·∫°ng th√°i n√∫t khi chuy·ªÉn phim
function restoreButtonState(index) {
    let state = buttonStates[index] || { play: false, favorite: false, info: false };

    playBtn.classList.toggle("active", state.play);
    favoriteBtn.classList.toggle("active", state.favorite);
    infoBtn.classList.toggle("active", state.info);

    const icon = favoriteBtn.querySelector("i");
    icon.classList.toggle("fas", state.favorite);
    icon.classList.toggle("far", !state.favorite);
}

// GI·ªØ nguy√™n vi·ªÅn khi nh·∫•n h√¨nh ·∫£nh
document.addEventListener("DOMContentLoaded", function () {
  const movieImages = document.querySelectorAll(".movie-list img");

  movieImages.forEach(img => {
      img.addEventListener("click", function () {
          // X√≥a l·ªõp 'active' kh·ªèi t·∫•t c·∫£ ·∫£nh
          movieImages.forEach(img => img.classList.remove("active"));
          
          // Th√™m l·ªõp 'active' v√†o ·∫£nh ƒë∆∞·ª£c nh·∫•n
          this.classList.add("active");
      });
  });
});


//ms
function changeImage(index) {
  let movie = movies[index];

  // 1. √Åp d·ª•ng l·ªõp "moving" ƒë·ªÉ b·∫Øt ƒë·∫ßu hi·ªáu ·ª©ng chuy·ªÉn trang
  applyMovingEffects();  // G·ªçi h√†m ƒë·ªÉ th√™m l·ªõp "moving" cho c√°c ph·∫ßn t·ª≠

  // 2. Sau khi thay ƒë·ªïi, c·∫≠p nh·∫≠t n·ªôi dung v√† ph·∫ßn t·ª≠
  setTimeout(() => {
      // C·∫≠p nh·∫≠t n·ªôi dung phim
      banner.style.backgroundImage = `url('/images/${movie.image}')`;
      movieTitle.innerText = movie.title;
      movieDescription.innerText = movie.description;
      movieYear.innerText = movie.year;
      movieIMDB.innerText = movie.imdb;
      movieAge.innerText = movie.age;
      moviePart.innerText = movie.part;
      movieEpisode.innerText = movie.episode;

      // C·∫≠p nh·∫≠t th·ªÉ lo·∫°i
      movieGenres.innerHTML = "";
      movie.genres.forEach(genre => {
          let genreTag = document.createElement("a");
          genreTag.className = "sub-tag";
          genreTag.innerText = genre;
          movieGenres.appendChild(genreTag);
      });

      // 3. C·∫≠p nh·∫≠t tr·∫°ng th√°i active c·ªßa ·∫£nh nh·ªè
      thumbnails.forEach(img => img.classList.remove("active"));
      thumbnails[index].classList.add("active");

      // 4. Kh√¥i ph·ª•c hi·ªáu ·ª©ng chuy·ªÉn c·∫£nh
      setTimeout(() => {
          removeMovingEffects();
          movieTitle.classList.add("moving-active");
          movieDescription.classList.add("moving-active");
          movieYear.classList.add("moving-active");
          movieIMDB.classList.add("moving-active");
          movieAge.classList.add("moving-active");
          moviePart.classList.add("moving-active");
          movieEpisode.classList.add("moving-active");
          movieGenres.querySelectorAll(".sub-tag").forEach(tag => tag.classList.add("moving-active"));
          banner.classList.add("moving-active");
      }, 100); // ƒê·∫£m b·∫£o kh√¥i ph·ª•c sau khi n·ªôi dung thay ƒë·ªïi
  }, 500); // Th·ªùi gian tr·ªÖ ƒë·ªÉ n·ªôi dung thay ƒë·ªïi (tƒÉng t·ªëc ƒë·ªô chuy·ªÉn c·∫£nh)

  // üî• Reset tr·∫°ng th√°i c·ªßa c√°c n√∫t
  restoreButtonState(index);

  currentIndex = index;
}

// H√†m th√™m hi·ªáu ·ª©ng di chuy·ªÉn
function applyMovingEffects() {
  movieTitle.classList.add("moving");
  movieDescription.classList.add("moving");
  movieYear.classList.add("moving");
  movieIMDB.classList.add("moving");
  movieAge.classList.add("moving");
  moviePart.classList.add("moving");
  movieEpisode.classList.add("moving");
  movieGenres.querySelectorAll(".sub-tag").forEach(tag => tag.classList.add("moving"));
  banner.classList.add("moving");
}

// H√†m lo·∫°i b·ªè hi·ªáu ·ª©ng di chuy·ªÉn
function removeMovingEffects() {
  movieTitle.classList.remove("moving");
  movieDescription.classList.remove("moving");
  movieYear.classList.remove("moving");
  movieIMDB.classList.remove("moving");
  movieAge.classList.remove("moving");
  moviePart.classList.remove("moving");
  movieEpisode.classList.remove("moving");
  movieGenres.querySelectorAll(".sub-tag").forEach(tag => tag.classList.remove("moving"));
  banner.classList.remove("moving");
}

//lmao




document.addEventListener("DOMContentLoaded", function () {
  const menuToggle = document.querySelector(".menu-toggle");
  const menu = document.querySelector(".menu");

  menuToggle.addEventListener("click", function () {
    menu.classList.toggle("show");
  });
});
document.addEventListener("DOMContentLoaded", function () {
  const moviesPerPage = 12; // S·ªë l∆∞·ª£ng phim m·ªói trang
  let currentPage = 1;
  const movies = document.querySelectorAll(".movie-item");
  const totalPages = Math.ceil(movies.length / moviesPerPage);

  function showPage(page) {
    movies.forEach((movie, index) => {
      if (index >= (page - 1) * moviesPerPage && index < page * moviesPerPage) {
        movie.style.display = "block";
      } else {
        movie.style.display = "none";
      }
    });
    document.getElementById("pageNumber").textContent = page;
  }

  document.getElementById("prevPage").addEventListener("click", function () {
    if (currentPage > 1) {
      currentPage--;
      showPage(currentPage);
    }
  });

  document.getElementById("nextPage").addEventListener("click", function () {
    if (currentPage < totalPages) {
      currentPage++;
      showPage(currentPage);
    }
  });

  showPage(currentPage);
});
function scrollToTop() {
  window.scrollTo({ top: 0, behavior: "smooth" });
}
document.addEventListener("DOMContentLoaded", function () {
  const filterModal = document.getElementById("filterModal");
  const openFilterBtn = document.getElementById("openFilter");
  const closeFilterBtn = document.querySelector(".close");
  const applyFilterBtn = document.getElementById("applyFilter");
  const yearFilter = document.getElementById("yearFilter");
  const movieItems = document.querySelectorAll(".movie-item");

  // Hi·ªÉn th·ªã c·ª≠a s·ªï b·ªô l·ªçc
  openFilterBtn.addEventListener("click", function () {
    filterModal.classList.add("show");
  });

  // ·∫®n c·ª≠a s·ªï b·ªô l·ªçc
  closeFilterBtn.addEventListener("click", function () {
    filterModal.classList.remove("show");
  });

  // ƒê√≥ng b·ªô l·ªçc khi click b√™n ngo√†i
  window.addEventListener("click", function (e) {
    if (e.target === filterModal) {
      filterModal.classList.remove("show");
    }
  });

  // L·ªçc phim theo nƒÉm
  applyFilterBtn.addEventListener("click", function () {
    const selectedYear = yearFilter.value;

    movieItems.forEach((item) => {
      const movieYear = item.getAttribute("data-year");

      if (!selectedYear || movieYear === selectedYear) {
        item.style.display = "block";
      } else {
        item.style.display = "none";
      }
    });

    filterModal.classList.remove("show");
  });
});
document.getElementById("applyFilter").addEventListener("click", function () {
  const year = document.getElementById("yearFilter").value;
  const country = document.getElementById("countryFilter").value;
  const type = document.getElementById("typeFilter").value;
  const rating = document.getElementById("ratingFilter").value;
  const genre = document.getElementById("genreFilter").value;
  const version = document.getElementById("versionFilter").value;
  const productionYear = document.getElementById("productionYearFilter").value;
  const sort = document.getElementById("sortFilter").value;

  const filters = {
    year,
    country,
    type,
    rating,
    genre,
    version,
    productionYear,
    sort,
  };

  console.log("B·ªô l·ªçc ƒë√£ √°p d·ª•ng:", filters);
  applyFilters(filters);
});

// H√†m √°p d·ª•ng b·ªô l·ªçc (gi·∫£ l·∫≠p)
function applyFilters(filters) {
  let movies = document.querySelectorAll(".movie-item");

  movies.forEach((movie) => {
    let show = true;

    if (filters.year && movie.dataset.year !== filters.year) show = false;
    if (filters.country && movie.dataset.country !== filters.country)
      show = false;
    if (filters.type && movie.dataset.type !== filters.type) show = false;
    if (filters.rating && movie.dataset.rating !== filters.rating) show = false;
    if (filters.genre && movie.dataset.genre !== filters.genre) show = false;
    if (filters.version && movie.dataset.version !== filters.version)
      show = false;
    if (
      filters.productionYear &&
      movie.dataset.productionYear !== filters.productionYear
    )
      show = false;

    movie.style.display = show ? "block" : "none";
  });

  // S·∫Øp x·∫øp phim theo b·ªô l·ªçc
  sortMovies(filters.sort);
}

// H√†m s·∫Øp x·∫øp phim
function sortMovies(sortBy) {
  let movieContainer = document.querySelector(".movie-grid");
  let movies = Array.from(movieContainer.children);

  movies.sort((a, b) => {
    if (sortBy === "latest") return b.dataset.year - a.dataset.year;
    if (sortBy === "oldest") return a.dataset.year - b.dataset.year;
    if (sortBy === "topRated") return b.dataset.rating - a.dataset.rating;
  });

  movieContainer.innerHTML = "";
  movies.forEach((movie) => movieContainer.appendChild(movie));
}
document.addEventListener("DOMContentLoaded", function () {
  const tooltip = document.getElementById("movieTooltip");
  const tooltipImage = document.getElementById("tooltipImage");
  const tooltipTitle = document.getElementById("tooltipTitle");
  const tooltipYear = document.getElementById("tooltipYear");
  const tooltipDesc = document.getElementById("tooltipDesc");
  const tooltipIMDb = document.querySelector(".imdb-rating strong");
  const tooltipAge = document.querySelector(".age-rating");
  const tooltipDuration = document.querySelector(".duration");
  const tooltipGenres = document.querySelector(".movie-genres");

  document.querySelectorAll(".movie-item").forEach((item) => {
    item.addEventListener("mouseenter", function () {
      // L·∫•y d·ªØ li·ªáu t·ª´ `data-*`
      const img = this.dataset.image;
      const title = this.dataset.title;
      const year = this.dataset.year;
      const desc = this.dataset.desc;
      const imdb = this.dataset.imdb;
      const age = this.dataset.age;
      const duration = this.dataset.duration;
      const genres = this.dataset.genres;

      // C·∫≠p nh·∫≠t tooltip
      tooltipImage.src = img;
      tooltipTitle.innerText = title;
      tooltipYear.innerText = `NƒÉm: ${year}`;
      tooltipDesc.innerText = desc;
      tooltipIMDb.innerText = imdb;
      tooltipAge.innerText = age;
      tooltipDuration.innerText = duration;
      tooltipGenres.innerHTML = genres
        .split(", ")
        .map((genre) => `<span>${genre}</span>`)
        .join(" ‚Ä¢ ");

      // L·∫•y v·ªã tr√≠ c·ªßa b·ªô phim
      const rect = this.getBoundingClientRect();
      const tooltipWidth = 400; // Chi·ªÅu r·ªông tooltip
      const spacing = 1; // Kho·∫£ng c√°ch gi·ªØa tooltip v√† b·ªô phim

      // Ki·ªÉm tra c√≥ ƒë·ªß kh√¥ng gian b√™n ph·∫£i kh√¥ng
      let leftPosition = rect.right + spacing;

      // N·∫øu kh√¥ng ƒë·ªß ch·ªó b√™n ph·∫£i, chuy·ªÉn tooltip sang b√™n tr√°i
      if (leftPosition + tooltipWidth > window.innerWidth) {
        leftPosition = rect.left - tooltipWidth - spacing;

        // N·∫øu b·ªã tr√†n qua m√©p tr√°i m√†n h√¨nh, ƒëi·ªÅu ch·ªânh l·∫°i cho h·ª£p l√Ω
        if (leftPosition < spacing) {
          leftPosition = spacing; // Gi·ªØ tooltip kh√¥ng b·ªã ƒë·∫©y qu√° xa
        }
      }

      // C·∫≠p nh·∫≠t v·ªã tr√≠ s√°t v·ªõi b·ªô phim
      tooltip.style.left = `${leftPosition}px`;
      tooltip.style.top = `${rect.top + window.scrollY}px`; // ƒêi·ªÅu ch·ªânh theo cu·ªôn trang
      tooltip.style.display = "block";
    });
  });

  // Gi·ªØ tooltip khi r√™ chu·ªôt v√†o
  tooltip.addEventListener("mouseenter", function () {
    tooltip.style.display = "block";
  });

  // ·∫®n tooltip khi di chu·ªôt ra ngo√†i c·∫£ phim v√† tooltip
  document.addEventListener("mousemove", function (event) {
    if (
      !tooltip.contains(event.target) &&
      !event.target.closest(".movie-item")
    ) {
      tooltip.style.display = "none";
    }
  });
});
document.addEventListener("DOMContentLoaded", function () {
  // L·∫•y t·∫•t c·∫£ c√°c m·ª•c qu·ªëc gia trong dropdown
  document
    .querySelectorAll(".country-dropdown .dropdown-item")
    .forEach((item) => {
      item.addEventListener("click", function (event) {
        event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh ƒë·ªông m·∫∑c ƒë·ªãnh

        const country = this.getAttribute("href").split("=")[1]; // L·∫•y t√™n qu·ªëc gia t·ª´ URL
        if (country) {
          window.location.href = `quoc-gia.html?country=${country}`;
        }
      });
    });
});
document.addEventListener("DOMContentLoaded", function () {
  const countryBtn = document.getElementById("countryButton"); // N√∫t "Qu·ªëc gia"
  const countryDropdown = document.getElementById("countryDropdown"); // Danh s√°ch qu·ªëc gia

  countryBtn.addEventListener("click", function () {
    countryDropdown.classList.toggle("show"); // Hi·ªÉn th·ªã ho·∫∑c ·∫©n danh s√°ch
  });

  // ·∫®n dropdown n·∫øu click ra ngo√†i
  document.addEventListener("click", function (event) {
    if (
      !countryBtn.contains(event.target) &&
      !countryDropdown.contains(event.target)
    ) {
      countryDropdown.classList.remove("show");
    }
  });
});

//l√≤e ng·∫´u nhi√™n h1
document.addEventListener("DOMContentLoaded", function() {
  const title = document.querySelector(".title-h1");
  const glowEffect = title.querySelector("::after");

  setInterval(() => {
    let randX = Math.random() * 100;
    let randY = Math.random() * 100;

    glowEffect.style.left = randX + "%";
    glowEffect.style.top = randY + "%";
  }, 2000);
});

//hi·ªáu ·ª©ng ms list film
// ƒê·∫£m b·∫£o ƒë√£ t·∫£i Bootstrap JavaScript
document.addEventListener('DOMContentLoaded', function () {
  // Kh·ªüi t·∫°o Bootstrap carousel
  const carousel = new bootstrap.Carousel(document.querySelector('#carouselH√†n'), {
      interval: 3000,  // T·ª± ƒë·ªông chuy·ªÉn m·ªói 3 gi√¢y
      ride: 'carousel'
  });

  // C√°c s·ª± ki·ªán ƒëi·ªÅu khi·ªÉn carousel khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c
  const carouselElement = document.getElementById('carouselH√†n');
  let isInteracting = false;
  let timeout;

  // Khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c (di chuy·ªÉn chu·ªôt, click, vv.)
  function resetAutoSlide() {
      if (timeout) {
          clearTimeout(timeout);  // H·ªßy b·ªè th·ªùi gian t·ª± ƒë·ªông n·∫øu c√≥ t∆∞∆°ng t√°c
      }

      // Kh·ªüi ƒë·ªông l·∫°i th·ªùi gian ƒë·∫øm ng∆∞·ª£c ƒë·ªÉ chuy·ªÉn ƒë·ªïi t·ª± ƒë·ªông sau 3s
      timeout = setTimeout(() => {
          carousel.next();  // Chuy·ªÉn sang movie ti·∫øp theo n·∫øu kh√¥ng c√≥ t∆∞∆°ng t√°c sau 3s
      }, 10000);
  }

  // L·∫Øng nghe c√°c s·ª± ki·ªán t∆∞∆°ng t√°c
  carouselElement.addEventListener('mousemove', resetAutoSlide);
  carouselElement.addEventListener('click', resetAutoSlide);
  carouselElement.addEventListener('touchstart', resetAutoSlide);
  
  // Th·ª±c hi·ªán kh·ªüi t·∫°o t·ª± ƒë·ªông sau 3s n·∫øu kh√¥ng c√≥ t∆∞∆°ng t√°c
  resetAutoSlide();
});

//ƒê·ªîI QU·ªêC GIA SANG PHIM T∆Ø∆†NG ·ª®NG
document.addEventListener("DOMContentLoaded", function () {
  console.log("Script ch·ªçn qu·ªëc gia ƒë√£ t·∫£i!");

  // X·ª≠ l√Ω s·ª± ki·ªán chuy·ªÉn trang khi ch·ªçn qu·ªëc gia
  const countryItems = document.querySelectorAll(".dropdown-item");

  countryItems.forEach((item) => {
      item.addEventListener("click", function (event) {
          event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh

          const link = this.getAttribute("href"); // L·∫•y link trang
          console.log("Chuy·ªÉn h∆∞·ªõng ƒë·∫øn:", link); // Ki·ªÉm tra trong Console

          if (link) {
              window.location.href = link; // Chuy·ªÉn h∆∞·ªõng
          }
      });
  });
});
